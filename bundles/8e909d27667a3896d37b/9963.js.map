{"version":3,"file":"bundles/8e909d27667a3896d37b/9963.js","mappings":"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","sources":["webpack://element-web/./res/img/external-link.svg","webpack://element-web/./src/components/views/beacon/BeaconMarker.tsx","webpack://element-web/./src/utils/beacon/bounds.ts","webpack://element-web/./src/components/views/beacon/ShareLatestLocation.tsx","webpack://element-web/./src/components/views/beacon/BeaconListItem.tsx","webpack://element-web/./src/components/views/beacon/DialogSidebar.tsx","webpack://element-web/./src/components/views/beacon/DialogOwnBeaconStatus.tsx","webpack://element-web/./src/components/views/beacon/BeaconStatusTooltip.tsx","webpack://element-web/./src/components/views/beacon/BeaconViewDialog.tsx","webpack://element-web/./src/utils/beacon/useLiveBeacons.ts","webpack://element-web/./src/components/views/location/Map.tsx","webpack://element-web/./src/utils/location/useMap.ts","webpack://element-web/./src/components/views/location/ZoomButtons.tsx","webpack://element-web/./src/utils/location/map.ts","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/minus.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/plus.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgExternalLink = function SvgExternalLink(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 11 10\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.5 5.5v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h3M7 .5h3v3M4.5 6 10 .5\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgExternalLink);\nexport { ForwardRef as Icon };\nexport default \"img/external-link.8197a77.svg\";","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { type ReactNode, useContext } from \"react\";\nimport { type Beacon, BeaconEvent, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\n\nimport type * as maplibregl from \"maplibre-gl\";\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\nimport { SmartMarker } from \"../location\";\n\ninterface Props {\n    map: maplibregl.Map;\n    beacon: Beacon;\n    tooltip?: ReactNode;\n}\n\n/**\n * Updates a map SmartMarker with latest location from given beacon\n */\nconst BeaconMarker: React.FC<Props> = ({ map, beacon, tooltip }) => {\n    const latestLocationState = useEventEmitterState(\n        beacon,\n        BeaconEvent.LocationUpdate,\n        () => beacon.latestLocationState,\n    );\n    const matrixClient = useContext(MatrixClientContext);\n    const room = matrixClient.getRoom(beacon.roomId);\n\n    if (!latestLocationState || !beacon.isLive) {\n        return null;\n    }\n\n    const geoUri = latestLocationState.uri || \"\";\n\n    const assetTypeIsSelf = beacon.beaconInfo?.assetType === LocationAssetType.Self;\n    const _member = room?.getMember(beacon.beaconInfoOwner);\n\n    const markerRoomMember = assetTypeIsSelf && _member ? _member : undefined;\n\n    return (\n        <SmartMarker\n            map={map}\n            id={beacon.identifier}\n            geoUri={geoUri}\n            roomMember={markerRoomMember}\n            tooltip={tooltip}\n            useMemberColor\n        />\n    );\n};\n\nexport default BeaconMarker;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { type Beacon } from \"matrix-js-sdk/src/matrix\";\n\nimport { filterBoolean } from \"../arrays\";\nimport { parseGeoUri } from \"../location\";\n\nexport type Bounds = {\n    north: number;\n    east: number;\n    west: number;\n    south: number;\n};\n\n/**\n * Get the geo bounds of given list of beacons\n *\n * Latitude:\n * equator: 0, North pole: 90, South pole -90\n * Longitude:\n * Prime Meridian (Greenwich): 0\n * east of Greenwich has a positive longitude, max 180\n * west of Greenwich has a negative longitude, min -180\n */\nexport const getBeaconBounds = (beacons: Beacon[]): Bounds | undefined => {\n    const coords = filterBoolean<GeolocationCoordinates>(\n        beacons.map((beacon) =>\n            !!beacon.latestLocationState?.uri ? parseGeoUri(beacon.latestLocationState.uri) : undefined,\n        ),\n    );\n\n    if (!coords.length) {\n        return;\n    }\n\n    // sort descending\n    const sortedByLat = [...coords].sort((left, right) => right.latitude - left.latitude);\n    const sortedByLong = [...coords].sort((left, right) => right.longitude - left.longitude);\n\n    if (sortedByLat.length < 1 || sortedByLong.length < 1) return;\n\n    return {\n        north: sortedByLat[0]!.latitude,\n        south: sortedByLat[sortedByLat.length - 1]!.latitude,\n        east: sortedByLong[0]!.longitude,\n        west: sortedByLong[sortedByLong.length - 1]!.longitude,\n    };\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useEffect, useState } from \"react\";\nimport { type ContentHelpers } from \"matrix-js-sdk/src/matrix\";\nimport { Tooltip } from \"@vector-im/compound-web\";\n\nimport { Icon as ExternalLinkIcon } from \"../../../../res/img/external-link.svg\";\nimport { _t } from \"../../../languageHandler\";\nimport { makeMapSiteLink, parseGeoUri } from \"../../../utils/location\";\nimport CopyableText from \"../elements/CopyableText\";\n\ninterface Props {\n    latestLocationState?: ContentHelpers.BeaconLocationState;\n}\n\nconst ShareLatestLocation: React.FC<Props> = ({ latestLocationState }) => {\n    const [coords, setCoords] = useState<GeolocationCoordinates | undefined>();\n    useEffect(() => {\n        if (!latestLocationState?.uri) {\n            return;\n        }\n        const coords = parseGeoUri(latestLocationState.uri);\n        setCoords(coords);\n    }, [latestLocationState]);\n\n    if (!latestLocationState || !coords) {\n        return null;\n    }\n\n    const latLonString = `${coords.latitude},${coords.longitude}`;\n    const mapLink = makeMapSiteLink(coords);\n\n    return (\n        <>\n            <Tooltip label={_t(\"timeline|context_menu|open_in_osm\")}>\n                <a data-testid=\"open-location-in-osm\" href={mapLink} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <ExternalLinkIcon className=\"mx_ShareLatestLocation_icon\" />\n                </a>\n            </Tooltip>\n            <CopyableText className=\"mx_ShareLatestLocation_copy\" border={false} getTextToCopy={() => latLonString} />\n        </>\n    );\n};\n\nexport default ShareLatestLocation;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { type HTMLProps, useContext } from \"react\";\nimport { type Beacon, BeaconEvent, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\n\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\nimport { humanizeTime } from \"../../../utils/humanize\";\nimport { preventDefaultWrapper } from \"../../../utils/NativeEventUtils\";\nimport { _t } from \"../../../languageHandler\";\nimport MemberAvatar from \"../avatars/MemberAvatar\";\nimport BeaconStatus from \"./BeaconStatus\";\nimport { BeaconDisplayStatus } from \"./displayStatus\";\nimport StyledLiveBeaconIcon from \"./StyledLiveBeaconIcon\";\nimport ShareLatestLocation from \"./ShareLatestLocation\";\n\ninterface Props {\n    beacon: Beacon;\n}\n\nconst BeaconListItem: React.FC<Props & HTMLProps<HTMLLIElement>> = ({ beacon, ...rest }) => {\n    const latestLocationState = useEventEmitterState(\n        beacon,\n        BeaconEvent.LocationUpdate,\n        () => beacon.latestLocationState,\n    );\n    const matrixClient = useContext(MatrixClientContext);\n    const room = matrixClient.getRoom(beacon.roomId);\n\n    if (!latestLocationState || !beacon.isLive || !room) {\n        return null;\n    }\n\n    const isSelfLocation = beacon.beaconInfo?.assetType === LocationAssetType.Self;\n    const beaconMember = isSelfLocation ? room.getMember(beacon.beaconInfoOwner) : null;\n\n    const humanizedUpdateTime = (latestLocationState.timestamp && humanizeTime(latestLocationState.timestamp)) || \"\";\n\n    return (\n        <li className=\"mx_BeaconListItem\" {...rest}>\n            {isSelfLocation ? (\n                <MemberAvatar className=\"mx_BeaconListItem_avatar\" member={beaconMember} size=\"32px\" />\n            ) : (\n                <StyledLiveBeaconIcon className=\"mx_BeaconListItem_avatarIcon\" />\n            )}\n            <div className=\"mx_BeaconListItem_info\">\n                <BeaconStatus\n                    className=\"mx_BeaconListItem_status\"\n                    beacon={beacon}\n                    label={beaconMember?.name || beacon.beaconInfo?.description || beacon.beaconInfoOwner}\n                    displayStatus={BeaconDisplayStatus.Active}\n                >\n                    {/* eat events from interactive share buttons\n                so parent click handlers are not triggered */}\n                    <div className=\"mx_BeaconListItem_interactions\" onClick={preventDefaultWrapper(() => {})}>\n                        <ShareLatestLocation latestLocationState={latestLocationState} />\n                    </div>\n                </BeaconStatus>\n                <span className=\"mx_BeaconListItem_lastUpdated\">\n                    {_t(\"location_sharing|live_update_time\", { humanizedUpdateTime })}\n                </span>\n            </div>\n        </li>\n    );\n};\n\nexport default BeaconListItem;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport { type Beacon } from \"matrix-js-sdk/src/matrix\";\nimport CloseIcon from \"@vector-im/compound-design-tokens/assets/web/icons/close\";\n\nimport { _t } from \"../../../languageHandler\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport Heading from \"../typography/Heading\";\nimport BeaconListItem from \"./BeaconListItem\";\n\ninterface Props {\n    beacons: Beacon[];\n    requestClose: () => void;\n    onBeaconClick: (beacon: Beacon) => void;\n}\n\nconst DialogSidebar: React.FC<Props> = ({ beacons, onBeaconClick, requestClose }) => {\n    return (\n        <div className=\"mx_DialogSidebar\">\n            <div className=\"mx_DialogSidebar_header\">\n                <Heading size=\"4\">{_t(\"action|view_list\")}</Heading>\n                <AccessibleButton\n                    className=\"mx_DialogSidebar_closeButton\"\n                    onClick={requestClose}\n                    title={_t(\"location_sharing|close_sidebar\")}\n                    data-testid=\"dialog-sidebar-close\"\n                >\n                    <CloseIcon className=\"mx_DialogSidebar_closeButtonIcon\" height=\"24px\" width=\"24px\" />\n                </AccessibleButton>\n            </div>\n            {beacons?.length ? (\n                <ol className=\"mx_DialogSidebar_list\">\n                    {beacons.map((beacon) => (\n                        <BeaconListItem key={beacon.identifier} beacon={beacon} onClick={() => onBeaconClick(beacon)} />\n                    ))}\n                </ol>\n            ) : (\n                <div className=\"mx_DialogSidebar_noResults\">{_t(\"location_sharing|live_locations_empty\")}</div>\n            )}\n        </div>\n    );\n};\n\nexport default DialogSidebar;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useContext } from \"react\";\nimport { type Room, type Beacon, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\n\nimport { OwnBeaconStore, OwnBeaconStoreEvent } from \"../../../stores/OwnBeaconStore\";\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\nimport OwnBeaconStatus from \"./OwnBeaconStatus\";\nimport { BeaconDisplayStatus } from \"./displayStatus\";\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport MemberAvatar from \"../avatars/MemberAvatar\";\nimport StyledLiveBeaconIcon from \"./StyledLiveBeaconIcon\";\n\ninterface Props {\n    roomId: Room[\"roomId\"];\n}\n\nconst useOwnBeacon = (roomId: Room[\"roomId\"]): Beacon | undefined => {\n    const ownBeacon = useEventEmitterState(OwnBeaconStore.instance, OwnBeaconStoreEvent.LivenessChange, () => {\n        const [ownBeaconId] = OwnBeaconStore.instance.getLiveBeaconIds(roomId);\n        return OwnBeaconStore.instance.getBeaconById(ownBeaconId);\n    });\n\n    return ownBeacon;\n};\n\nconst DialogOwnBeaconStatus: React.FC<Props> = ({ roomId }) => {\n    const beacon = useOwnBeacon(roomId);\n\n    const matrixClient = useContext(MatrixClientContext);\n    const room = matrixClient.getRoom(roomId);\n\n    if (!beacon?.isLive || !room) {\n        return null;\n    }\n\n    const isSelfLocation = beacon.beaconInfo?.assetType === LocationAssetType.Self;\n    const beaconMember = isSelfLocation ? room.getMember(beacon.beaconInfoOwner) : null;\n\n    return (\n        <div className=\"mx_DialogOwnBeaconStatus\">\n            {isSelfLocation ? (\n                <MemberAvatar className=\"mx_DialogOwnBeaconStatus_avatar\" member={beaconMember} size=\"32px\" />\n            ) : (\n                <StyledLiveBeaconIcon className=\"mx_DialogOwnBeaconStatus_avatarIcon\" />\n            )}\n            <OwnBeaconStatus\n                className=\"mx_DialogOwnBeaconStatus_status\"\n                beacon={beacon}\n                displayStatus={BeaconDisplayStatus.Active}\n            />\n        </div>\n    );\n};\n\nexport default DialogOwnBeaconStatus;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useContext } from \"react\";\nimport { type Beacon, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\n\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport BeaconStatus from \"./BeaconStatus\";\nimport { BeaconDisplayStatus } from \"./displayStatus\";\nimport ShareLatestLocation from \"./ShareLatestLocation\";\n\ninterface Props {\n    beacon: Beacon;\n}\n\nconst useBeaconName = (beacon: Beacon): string | undefined => {\n    const matrixClient = useContext(MatrixClientContext);\n\n    if (beacon.beaconInfo?.assetType !== LocationAssetType.Self) {\n        return beacon.beaconInfo?.description;\n    }\n    const room = matrixClient.getRoom(beacon.roomId);\n    const member = room?.getMember(beacon.beaconInfoOwner);\n\n    return member?.rawDisplayName || beacon.beaconInfoOwner;\n};\n\nconst BeaconStatusTooltip: React.FC<Props> = ({ beacon }) => {\n    const label = useBeaconName(beacon);\n\n    return (\n        <div className=\"mx_BeaconStatusTooltip\">\n            <BeaconStatus\n                beacon={beacon}\n                label={label}\n                displayStatus={BeaconDisplayStatus.Active}\n                displayLiveTimeRemaining\n                className=\"mx_BeaconStatusTooltip_inner\"\n            >\n                <ShareLatestLocation latestLocationState={beacon.latestLocationState} />\n            </BeaconStatus>\n        </div>\n    );\n};\n\nexport default BeaconStatusTooltip;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { type MatrixClient, type Beacon, type Room } from \"matrix-js-sdk/src/matrix\";\n\nimport type * as maplibregl from \"maplibre-gl\";\nimport { Icon as LiveLocationIcon } from \"../../../../res/img/location/live-location.svg\";\nimport { useLiveBeacons } from \"../../../utils/beacon/useLiveBeacons\";\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport BaseDialog from \"../dialogs/BaseDialog\";\nimport Map from \"../location/Map\";\nimport ZoomButtons from \"../location/ZoomButtons\";\nimport BeaconMarker from \"./BeaconMarker\";\nimport { type Bounds, getBeaconBounds } from \"../../../utils/beacon/bounds\";\nimport { getGeoUri } from \"../../../utils/beacon\";\nimport { _t } from \"../../../languageHandler\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport DialogSidebar from \"./DialogSidebar\";\nimport DialogOwnBeaconStatus from \"./DialogOwnBeaconStatus\";\nimport BeaconStatusTooltip from \"./BeaconStatusTooltip\";\nimport MapFallback from \"../location/MapFallback\";\nimport { MapError } from \"../location/MapError\";\nimport { type LocationShareError } from \"../../../utils/location\";\n\nexport interface IProps {\n    roomId: Room[\"roomId\"];\n    matrixClient: MatrixClient;\n    // open the map centered on this beacon's location\n    initialFocusedBeacon?: Beacon;\n    onFinished(): void;\n}\n\n// track the 'focused time' as ts\n// to make it possible to refocus the same beacon\n// as the beacon location may change\n// or the map may move around\ninterface FocusedBeaconState {\n    ts: number;\n    beacon?: Beacon;\n}\n\nconst getBoundsCenter = (bounds?: Bounds): string | undefined => {\n    if (!bounds) {\n        return;\n    }\n    return getGeoUri({\n        latitude: (bounds.north + bounds.south) / 2,\n        longitude: (bounds.east + bounds.west) / 2,\n        timestamp: Date.now(),\n    });\n};\n\nconst useMapPosition = (\n    liveBeacons: Beacon[],\n    { beacon, ts }: FocusedBeaconState,\n): {\n    bounds?: Bounds;\n    centerGeoUri?: string;\n} => {\n    const [bounds, setBounds] = useState<Bounds | undefined>(getBeaconBounds(liveBeacons));\n    const [centerGeoUri, setCenterGeoUri] = useState<string | undefined>(\n        beacon?.latestLocationState?.uri || getBoundsCenter(bounds),\n    );\n\n    useEffect(() => {\n        if (\n            // this check ignores the first initial focused beacon state\n            // as centering logic on map zooms to show everything\n            // instead of focusing down\n            ts !== 0 &&\n            // only set focus to a known location\n            beacon?.latestLocationState?.uri\n        ) {\n            // append custom `mxTs` parameter to geoUri\n            // so map is triggered to refocus on this uri\n            // event if it was previously the center geouri\n            // but the map have moved/zoomed\n            setCenterGeoUri(`${beacon?.latestLocationState?.uri};mxTs=${Date.now()}`);\n            setBounds(getBeaconBounds([beacon]));\n        }\n    }, [beacon, ts]);\n\n    return { bounds, centerGeoUri };\n};\n\n/**\n * Dialog to view live beacons maximised\n */\nconst BeaconViewDialog: React.FC<IProps> = ({ initialFocusedBeacon, roomId, matrixClient, onFinished }) => {\n    const liveBeacons = useLiveBeacons(roomId, matrixClient);\n    const [focusedBeaconState, setFocusedBeaconState] = useState<FocusedBeaconState>({\n        beacon: initialFocusedBeacon,\n        ts: 0,\n    });\n\n    const [isSidebarOpen, setSidebarOpen] = useState(false);\n\n    const { bounds, centerGeoUri } = useMapPosition(liveBeacons, focusedBeaconState);\n\n    const [mapDisplayError, setMapDisplayError] = useState<unknown>();\n\n    // automatically open the sidebar if there is no map to see\n    useEffect(() => {\n        if (mapDisplayError) {\n            setSidebarOpen(true);\n        }\n    }, [mapDisplayError]);\n\n    const onBeaconListItemClick = (beacon: Beacon): void => {\n        setFocusedBeaconState({ beacon, ts: Date.now() });\n    };\n\n    const hasOwnBeacon =\n        liveBeacons.filter((beacon) => beacon?.beaconInfoOwner === matrixClient.getUserId()).length > 0;\n\n    return (\n        <BaseDialog className=\"mx_BeaconViewDialog\" onFinished={onFinished} fixedWidth={false}>\n            <MatrixClientContext.Provider value={matrixClient}>\n                {centerGeoUri && !mapDisplayError && (\n                    <Map\n                        id=\"mx_BeaconViewDialog\"\n                        bounds={bounds}\n                        centerGeoUri={centerGeoUri}\n                        interactive\n                        onError={setMapDisplayError}\n                        className=\"mx_BeaconViewDialog_map\"\n                        allowGeolocate={!hasOwnBeacon}\n                    >\n                        {({ map }: { map: maplibregl.Map }) => (\n                            <>\n                                {liveBeacons.map((beacon) => (\n                                    <BeaconMarker\n                                        key={beacon.identifier}\n                                        map={map}\n                                        beacon={beacon}\n                                        tooltip={<BeaconStatusTooltip beacon={beacon} />}\n                                    />\n                                ))}\n                                <ZoomButtons map={map} />\n                            </>\n                        )}\n                    </Map>\n                )}\n                {mapDisplayError instanceof Error && (\n                    <MapError error={mapDisplayError.message as LocationShareError} isMinimised />\n                )}\n                {!centerGeoUri && !mapDisplayError && (\n                    <MapFallback data-testid=\"beacon-view-dialog-map-fallback\" className=\"mx_BeaconViewDialog_map\">\n                        <span className=\"mx_BeaconViewDialog_mapFallbackMessage\">\n                            {_t(\"location_sharing|live_locations_empty\")}\n                        </span>\n                        <AccessibleButton\n                            kind=\"primary\"\n                            onClick={onFinished}\n                            data-testid=\"beacon-view-dialog-fallback-close\"\n                        >\n                            {_t(\"action|close\")}\n                        </AccessibleButton>\n                    </MapFallback>\n                )}\n                {isSidebarOpen ? (\n                    <DialogSidebar\n                        beacons={liveBeacons}\n                        onBeaconClick={onBeaconListItemClick}\n                        requestClose={() => setSidebarOpen(false)}\n                    />\n                ) : (\n                    <AccessibleButton\n                        kind=\"primary\"\n                        onClick={() => setSidebarOpen(true)}\n                        data-testid=\"beacon-view-dialog-open-sidebar\"\n                        className=\"mx_BeaconViewDialog_viewListButton\"\n                    >\n                        <LiveLocationIcon height={12} />\n                        &nbsp;\n                        {_t(\"action|view_list\")}\n                    </AccessibleButton>\n                )}\n                <DialogOwnBeaconStatus roomId={roomId} />\n            </MatrixClientContext.Provider>\n        </BaseDialog>\n    );\n};\n\nexport default BeaconViewDialog;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { type Beacon, type Room, RoomStateEvent, type MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport { useEventEmitterState } from \"../../hooks/useEventEmitter\";\n\n/**\n * Returns an array of all live beacon ids for a given room\n *\n * Beacons are removed from array when they become inactive\n */\nexport const useLiveBeacons = (roomId: Room[\"roomId\"], matrixClient: MatrixClient): Beacon[] => {\n    const room = matrixClient.getRoom(roomId);\n\n    const liveBeacons = useEventEmitterState(\n        room?.currentState,\n        RoomStateEvent.BeaconLiveness,\n        () =>\n            room?.currentState?.liveBeaconIds.map(\n                (beaconIdentifier) => room.currentState.beacons.get(beaconIdentifier)!,\n            ) || [],\n    );\n\n    return liveBeacons;\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { type ReactNode, useContext, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport * as maplibregl from \"maplibre-gl\";\nimport { ClientEvent, type IClientWellKnown } from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\nimport { parseGeoUri, positionFailureMessage } from \"../../../utils/location\";\nimport { tileServerFromWellKnown } from \"../../../utils/WellKnownUtils\";\nimport { useMap } from \"../../../utils/location/useMap\";\nimport { type Bounds } from \"../../../utils/beacon/bounds\";\nimport Modal from \"../../../Modal\";\nimport ErrorDialog from \"../dialogs/ErrorDialog\";\nimport { _t } from \"../../../languageHandler\";\n\nconst useMapWithStyle = ({\n    id,\n    centerGeoUri,\n    onError,\n    interactive,\n    bounds,\n    allowGeolocate,\n}: {\n    id: string;\n    centerGeoUri?: string;\n    onError?(error: Error): void;\n    interactive?: boolean;\n    bounds?: Bounds;\n    allowGeolocate?: boolean;\n}): {\n    map: maplibregl.Map | undefined;\n    bodyId: string;\n} => {\n    const bodyId = `mx_Map_${id}`;\n\n    // style config\n    const context = useContext(MatrixClientContext);\n    const mapStyleUrl = useEventEmitterState(\n        context,\n        ClientEvent.ClientWellKnown,\n        (clientWellKnown: IClientWellKnown) => tileServerFromWellKnown(clientWellKnown)?.[\"map_style_url\"],\n    );\n\n    const map = useMap({ interactive, bodyId, onError });\n\n    useEffect(() => {\n        if (mapStyleUrl && map) {\n            map.setStyle(mapStyleUrl);\n        }\n    }, [mapStyleUrl, map]);\n\n    useEffect(() => {\n        if (map && centerGeoUri) {\n            try {\n                const coords = parseGeoUri(centerGeoUri);\n                if (!coords) {\n                    throw new Error(\"Invalid geo URI\");\n                }\n                map.setCenter({ lon: coords.longitude, lat: coords.latitude });\n            } catch (e) {\n                logger.error(\"Could not set map center\", e);\n            }\n        }\n    }, [map, centerGeoUri]);\n\n    useEffect(() => {\n        if (map && bounds) {\n            try {\n                const lngLatBounds = new maplibregl.LngLatBounds(\n                    [bounds.west, bounds.south],\n                    [bounds.east, bounds.north],\n                );\n                map.fitBounds(lngLatBounds, { padding: 100, maxZoom: 15 });\n            } catch (e) {\n                logger.error(\"Invalid map bounds\", e);\n            }\n        }\n    }, [map, bounds]);\n\n    const [geolocate, setGeolocate] = useState<maplibregl.GeolocateControl | null>(null);\n\n    useEffect(() => {\n        if (!map) {\n            return;\n        }\n        if (allowGeolocate && !geolocate) {\n            const geolocate = new maplibregl.GeolocateControl({\n                positionOptions: {\n                    enableHighAccuracy: true,\n                },\n                trackUserLocation: false,\n            });\n            setGeolocate(geolocate);\n            map.addControl(geolocate);\n        }\n        if (!allowGeolocate && geolocate) {\n            map.removeControl(geolocate);\n            setGeolocate(null);\n        }\n    }, [map, geolocate, allowGeolocate]);\n\n    useEffect(() => {\n        if (geolocate) {\n            geolocate.on(\"error\", onGeolocateError);\n            return () => {\n                geolocate.off(\"error\", onGeolocateError);\n            };\n        }\n    }, [geolocate]);\n\n    return {\n        map,\n        bodyId,\n    };\n};\n\nconst onGeolocateError = (e: GeolocationPositionError): void => {\n    logger.error(\"Could not fetch location\", e);\n    Modal.createDialog(ErrorDialog, {\n        title: _t(\"location_sharing|error_fetch_location\"),\n        description: positionFailureMessage(e.code) ?? \"\",\n    });\n};\n\nexport interface MapProps {\n    id: string;\n    interactive?: boolean;\n    /**\n     * set map center to geoUri coords\n     * Center will only be set to valid geoUri\n     * this prop is only simply diffed by useEffect, so to trigger *recentering* of the same geoUri\n     * append the uri with a var not used by the geoUri spec\n     * eg a timestamp: `geo:54,42;mxTs=123`\n     */\n    centerGeoUri?: string;\n    bounds?: Bounds;\n    className?: string;\n    allowGeolocate?: boolean;\n    onClick?: () => void;\n    onError?: (error: Error) => void;\n    children?: (renderProps: { map: maplibregl.Map }) => ReactNode;\n}\n\nconst MapComponent: React.FC<MapProps> = ({\n    bounds,\n    centerGeoUri,\n    children,\n    className,\n    allowGeolocate,\n    id,\n    interactive,\n    onError,\n    onClick,\n}) => {\n    const { map, bodyId } = useMapWithStyle({ centerGeoUri, onError, id, interactive, bounds, allowGeolocate });\n\n    const onMapClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\n        // Eat click events when clicking the attribution button\n        const target = event.target as Element;\n        if (target.classList.contains(\"maplibregl-ctrl-attrib-button\")) {\n            return;\n        }\n\n        onClick?.();\n    };\n\n    return (\n        <div className={classNames(\"mx_Map\", className)} id={bodyId} onClick={onMapClick}>\n            {!!children && !!map && children({ map })}\n        </div>\n    );\n};\n\nexport default MapComponent;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { useEffect, useState } from \"react\";\n\nimport type { Map as MapLibreMap } from \"maplibre-gl\";\nimport { createMap } from \"./map\";\nimport { useMatrixClientContext } from \"../../contexts/MatrixClientContext\";\n\ninterface UseMapProps {\n    bodyId: string;\n    onError?: (error: Error) => void;\n    interactive?: boolean;\n}\n\n/**\n * Create a map instance\n * Add listeners for errors\n * Make sure `onError` has a stable reference\n * As map is recreated on changes to it\n */\nexport const useMap = ({ interactive, bodyId, onError }: UseMapProps): MapLibreMap | undefined => {\n    const cli = useMatrixClientContext();\n    const [map, setMap] = useState<MapLibreMap>();\n\n    useEffect(\n        () => {\n            let map: MapLibreMap | undefined;\n            try {\n                map = createMap(cli, !!interactive, bodyId, onError);\n                setMap(map);\n            } catch (error) {\n                console.error(\"Error encountered in useMap\", error);\n                if (error instanceof Error) {\n                    onError?.(error);\n                }\n            }\n            return () => {\n                if (map) {\n                    map.remove();\n                    setMap(undefined);\n                }\n            };\n        },\n        // map is excluded as a dependency\n        [cli, interactive, bodyId, onError],\n    );\n\n    return map;\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport { PlusIcon, MinusIcon } from \"@vector-im/compound-design-tokens/assets/web/icons\";\n\nimport type * as maplibregl from \"maplibre-gl\";\nimport { _t } from \"../../../languageHandler\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\n\ninterface Props {\n    map: maplibregl.Map;\n}\n\nconst ZoomButtons: React.FC<Props> = ({ map }) => {\n    const onZoomIn = (): void => {\n        map.zoomIn();\n    };\n\n    const onZoomOut = (): void => {\n        map.zoomOut();\n    };\n\n    return (\n        <div className=\"mx_ZoomButtons\">\n            <AccessibleButton\n                onClick={onZoomIn}\n                data-testid=\"map-zoom-in-button\"\n                title={_t(\"action|zoom_in\")}\n                className=\"mx_ZoomButtons_button\"\n            >\n                <PlusIcon className=\"mx_ZoomButtons_icon\" />\n            </AccessibleButton>\n            <AccessibleButton\n                onClick={onZoomOut}\n                data-testid=\"map-zoom-out-button\"\n                title={_t(\"action|zoom_out\")}\n                className=\"mx_ZoomButtons_button\"\n            >\n                <MinusIcon className=\"mx_ZoomButtons_icon\" />\n            </AccessibleButton>\n        </div>\n    );\n};\n\nexport default ZoomButtons;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport * as maplibregl from \"maplibre-gl\";\nimport { type MatrixClient } from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { _t } from \"../../languageHandler\";\nimport { findMapStyleUrl } from \"./findMapStyleUrl\";\nimport { LocationShareError } from \"./LocationShareErrors\";\n\nexport const createMap = (\n    client: MatrixClient,\n    interactive: boolean,\n    bodyId: string,\n    onError?: (error: Error) => void,\n): maplibregl.Map => {\n    try {\n        const styleUrl = findMapStyleUrl(client);\n\n        const map = new maplibregl.Map({\n            container: bodyId,\n            style: styleUrl,\n            zoom: 15,\n            interactive,\n            attributionControl: false,\n            locale: {\n                \"AttributionControl.ToggleAttribution\": _t(\"location_sharing|toggle_attribution\"),\n                \"AttributionControl.MapFeedback\": _t(\"location_sharing|map_feedback\"),\n                \"FullscreenControl.Enter\": _t(\"action|enter_fullscreen\"),\n                \"FullscreenControl.Exit\": _t(\"action|exit_fullscreeen\"),\n                \"GeolocateControl.FindMyLocation\": _t(\"location_sharing|find_my_location\"),\n                \"GeolocateControl.LocationNotAvailable\": _t(\"location_sharing|location_not_available\"),\n                \"LogoControl.Title\": _t(\"location_sharing|mapbox_logo\"),\n                \"NavigationControl.ResetBearing\": _t(\"location_sharing|reset_bearing\"),\n                \"NavigationControl.ZoomIn\": _t(\"action|zoom_in\"),\n                \"NavigationControl.ZoomOut\": _t(\"action|zoom_out\"),\n            },\n        });\n        map.addControl(new maplibregl.AttributionControl(), \"top-right\");\n\n        map.on(\"error\", (e) => {\n            logger.error(\"Failed to load map: check map_style_url in config.json has a valid URL and API key\", e.error);\n            onError?.(new Error(LocationShareError.MapStyleUrlNotReachable));\n        });\n\n        return map;\n    } catch (e) {\n        logger.error(\"Failed to render map\", e);\n        const errorMessage = (e as Error)?.message;\n        if (errorMessage.includes(\"Failed to initialize WebGL\")) throw new Error(LocationShareError.WebGLNotEnabled);\n        throw e;\n    }\n};\n\nexport const createMarker = (coords: GeolocationCoordinates, element: HTMLElement): maplibregl.Marker => {\n    const marker = new maplibregl.Marker({\n        element,\n        anchor: \"bottom\",\n        offset: [0, -1],\n    }).setLngLat({ lon: coords.longitude, lat: coords.latitude });\n    return marker;\n};\n","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction MinusIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M6 13a.967.967 0 0 1-.713-.287A.968.968 0 0 1 5 12c0-.283.096-.52.287-.713A.967.967 0 0 1 6 11h12a.97.97 0 0 1 .712.287c.192.192.288.43.288.713s-.096.52-.288.713A.968.968 0 0 1 18 13H6Z\"\n    })\n  });\n}\n;\nMinusIcon.displayName = \"MinusIcon\";\nexport default forwardRef(MinusIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction PlusIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M11 13H6a.967.967 0 0 1-.713-.287A.968.968 0 0 1 5 12c0-.283.096-.52.287-.713A.967.967 0 0 1 6 11h5V6c0-.283.096-.52.287-.713A.968.968 0 0 1 12 5c.283 0 .52.096.713.287.191.192.287.43.287.713v5h5a.97.97 0 0 1 .712.287c.192.192.288.43.288.713s-.096.52-.288.713A.968.968 0 0 1 18 13h-5v5a.97.97 0 0 1-.287.712A.968.968 0 0 1 12 19a.968.968 0 0 1-.713-.288A.968.968 0 0 1 11 18v-5Z\"\n    })\n  });\n}\n;\nPlusIcon.displayName = \"PlusIcon\";\nexport default forwardRef(PlusIcon);"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgExternalLink","props","ref","xmlns","viewBox","role","fill","fillRule","stroke","strokeLinecap","strokeLinejoin","d","ForwardRef","forwardRef","BeaconMarker","map","beacon","tooltip","_beacon$beaconInfo","latestLocationState","useEventEmitterState","BeaconEvent","LocationUpdate","room","useContext","MatrixClientContext","getRoom","roomId","isLive","geoUri","uri","assetTypeIsSelf","beaconInfo","assetType","LocationAssetType","Self","_member","getMember","beaconInfoOwner","markerRoomMember","undefined","React","SmartMarker","id","identifier","roomMember","useMemberColor","getBeaconBounds","beacons","coords","filterBoolean","_beacon$latestLocatio","parseGeoUri","sortedByLat","sort","left","right","latitude","sortedByLong","longitude","north","south","east","west","ShareLatestLocation","setCoords","useState","useEffect","latLonString","mapLink","makeMapSiteLink","Tooltip","label","_t","href","target","rel","ExternalLinkIcon","className","CopyableText","border","getTextToCopy","_ref","_beacon$beaconInfo2","rest","_objectWithoutProperties","_excluded","isSelfLocation","beaconMember","humanizedUpdateTime","timestamp","humanizeTime","MemberAvatar","member","size","StyledLiveBeaconIcon","BeaconStatus","name","description","displayStatus","BeaconDisplayStatus","Active","onClick","preventDefaultWrapper","DialogSidebar","onBeaconClick","requestClose","Heading","AccessibleButton","title","CloseIcon","height","width","BeaconListItem","key","DialogOwnBeaconStatus","OwnBeaconStore","instance","OwnBeaconStoreEvent","LivenessChange","ownBeaconId","getLiveBeaconIds","getBeaconById","useOwnBeacon","OwnBeaconStatus","BeaconStatusTooltip","matrixClient","rawDisplayName","useBeaconName","displayLiveTimeRemaining","getBoundsCenter","bounds","getGeoUri","Date","now","BeaconViewDialog","initialFocusedBeacon","onFinished","liveBeacons","useLiveBeacons","currentState","RoomStateEvent","BeaconLiveness","_room$currentState","liveBeaconIds","beaconIdentifier","get","focusedBeaconState","setFocusedBeaconState","ts","isSidebarOpen","setSidebarOpen","centerGeoUri","useMapPosition","setBounds","setCenterGeoUri","_beacon$latestLocatio2","_beacon$latestLocatio3","mapDisplayError","setMapDisplayError","hasOwnBeacon","filter","getUserId","BaseDialog","fixedWidth","Provider","value","Map","interactive","onError","allowGeolocate","ZoomButtons","Error","MapError","error","message","isMinimised","MapFallback","kind","LiveLocationIcon","useMapWithStyle","bodyId","context","mapStyleUrl","ClientEvent","ClientWellKnown","clientWellKnown","_tileServerFromWellKn","tileServerFromWellKnown","useMap","cli","useMatrixClientContext","setMap","createMap","console","remove","setStyle","setCenter","lon","lat","logger","lngLatBounds","maplibregl","fitBounds","padding","maxZoom","geolocate","setGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","addControl","removeControl","on","onGeolocateError","off","_positionFailureMessa","Modal","createDialog","ErrorDialog","positionFailureMessage","code","MapComponent","children","classNames","event","classList","contains","onZoomIn","zoomIn","PlusIcon","onZoomOut","zoomOut","MinusIcon","client","styleUrl","findMapStyleUrl","container","style","zoom","attributionControl","locale","LocationShareError","MapStyleUrlNotReachable","includes","WebGLNotEnabled","createMarker","element","anchor","offset","setLngLat","displayName"],"sourceRoot":""}