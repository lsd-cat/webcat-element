{"version":3,"file":"bundles/8e909d27667a3896d37b/5438.js","mappings":"4rBA+Be,MAAMA,UAAgCC,EAAAA,UAC1CC,WAAAA,CAAYC,GACfC,MAAMD,IAAOE,EAAAA,EAAAA,GAAA,kBAMGC,UAChBC,KAAKC,SAAS,CACVC,WAAW,UAGTC,EAAAA,EAAcC,SAAS,sBAAuB,KAAMC,EAAAA,EAAaC,QAAQ,SACzEC,EAAAA,EAAcC,mBACpBR,KAAKJ,MAAMa,YAAW,GACtBC,EAAAA,EAAIC,KAAKC,EAAAA,EAAOC,iBAAiB,IAbjCb,KAAKc,MAAQ,CACTZ,WAAW,EAEnB,CAaOa,MAAAA,GACH,OACIrB,EAAAA,cAACsB,EAAAA,EAAU,CAACP,WAAYT,KAAKJ,MAAMa,WAAYQ,OAAOC,EAAAA,EAAAA,IAAG,yBACpDA,EAAAA,EAAAA,IAAG,oDACHlB,KAAKc,MAAMZ,UAAYR,EAAAA,cAACyB,EAAAA,EAAO,MAAMzB,EAAAA,cAAA,YACtCA,EAAAA,cAAC0B,EAAAA,EAAa,CACVC,eAAeH,EAAAA,EAAAA,IAAG,kBAClBI,qBAAsBtB,KAAKuB,UAC3BC,mBAAmB,SACnBC,kBAAkB,UAClBC,SAAU1B,KAAKJ,MAAMa,WACrBkB,SAAU3B,KAAKc,MAAMZ,YAIrC,E","sources":["webpack://element-web/./src/async-components/views/dialogs/eventindex/DisableEventIndexDialog.tsx"],"sourcesContent":["/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\n\nimport BaseDialog from \"../../../../components/views/dialogs/BaseDialog\";\nimport Spinner from \"../../../../components/views/elements/Spinner\";\nimport DialogButtons from \"../../../../components/views/elements/DialogButtons\";\nimport dis from \"../../../../dispatcher/dispatcher\";\nimport { _t } from \"../../../../languageHandler\";\nimport SettingsStore from \"../../../../settings/SettingsStore\";\nimport EventIndexPeg from \"../../../../indexing/EventIndexPeg\";\nimport { Action } from \"../../../../dispatcher/actions\";\nimport { SettingLevel } from \"../../../../settings/SettingLevel\";\n\ninterface IProps {\n    onFinished: (success?: boolean) => void;\n}\n\ninterface IState {\n    disabling: boolean;\n}\n\n/*\n * Allows the user to disable the Event Index.\n */\nexport default class DisableEventIndexDialog extends React.Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n        this.state = {\n            disabling: false,\n        };\n    }\n\n    private onDisable = async (): Promise<void> => {\n        this.setState({\n            disabling: true,\n        });\n\n        await SettingsStore.setValue(\"enableEventIndexing\", null, SettingLevel.DEVICE, false);\n        await EventIndexPeg.deleteEventIndex();\n        this.props.onFinished(true);\n        dis.fire(Action.ViewUserSettings);\n    };\n\n    public render(): React.ReactNode {\n        return (\n            <BaseDialog onFinished={this.props.onFinished} title={_t(\"common|are_you_sure\")}>\n                {_t(\"settings|security|message_search_disable_warning\")}\n                {this.state.disabling ? <Spinner /> : <div />}\n                <DialogButtons\n                    primaryButton={_t(\"action|disable\")}\n                    onPrimaryButtonClick={this.onDisable}\n                    primaryButtonClass=\"danger\"\n                    cancelButtonClass=\"warning\"\n                    onCancel={this.props.onFinished}\n                    disabled={this.state.disabling}\n                />\n            </BaseDialog>\n        );\n    }\n}\n"],"names":["DisableEventIndexDialog","React","constructor","props","super","_defineProperty","async","this","setState","disabling","SettingsStore","setValue","SettingLevel","DEVICE","EventIndexPeg","deleteEventIndex","onFinished","dis","fire","Action","ViewUserSettings","state","render","BaseDialog","title","_t","Spinner","DialogButtons","primaryButton","onPrimaryButtonClick","onDisable","primaryButtonClass","cancelButtonClass","onCancel","disabled"],"sourceRoot":""}