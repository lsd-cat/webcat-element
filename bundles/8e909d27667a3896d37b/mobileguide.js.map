{"version":3,"file":"bundles/8e909d27667a3896d37b/mobileguide.js","mappings":"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","sources":["webpack://element-web/./node_modules/loglevel/lib/loglevel.js","webpack://element-web/webpack/bootstrap","webpack://element-web/webpack/runtime/compat get default export","webpack://element-web/webpack/runtime/define property getters","webpack://element-web/webpack/runtime/hasOwnProperty shorthand","webpack://element-web/webpack/runtime/compat","webpack://element-web/./node_modules/matrix-js-sdk/src/logger.ts","webpack://element-web/./src/vector/getconfig.ts","webpack://element-web/./src/vector/mobile_guide/index.ts"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = {};\n    var countMap = {};\n    var getRetryDelay = function () {\n      return 500;\n    };\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result +\n        (queryMap.hasOwnProperty(chunkId) ? '?' + queryMap[chunkId] : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.hasOwnProperty(chunkId) ? countMap[chunkId] : 3;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 3 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          var retryAttempt = 3 - retries + 1;\n          setTimeout(function () {\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (() => Date.now())();\n            +retryAttemptString;\n            queryMap[chunkId] = cacheBust;\n            countMap[chunkId] = retries - 1;\n            resolve(__webpack_require__.e(chunkId));\n          }, getRetryDelay(retryAttempt));\n        });\n      });\n    };\n  }\n})();\n","/*\nCopyright 2018 André Jaenisch\nCopyright 2019, 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport loglevel from \"loglevel\";\n\n/** Backwards-compatibility hack to expose `log` to applications that might still be relying on it. */\ninterface LoggerWithLogMethod extends Logger {\n    /**\n     * Output debug message to the logger.\n     *\n     * @param msg - Data to log.\n     *\n     * @deprecated prefer {@link Logger.debug}.\n     */\n    log(...msg: any[]): void;\n}\n\n/** Logger interface used within the js-sdk codebase */\nexport interface Logger extends BaseLogger {\n    /**\n     * Create a child logger.\n     *\n     * @param namespace - name to add to the current logger to generate the child. Some implementations of `Logger`\n     *    use this as a prefix; others use a different mechanism.\n     */\n    getChild(namespace: string): Logger;\n}\n\n/** The basic interface for a logger which doesn't support children */\nexport interface BaseLogger {\n    /**\n     * Output trace message to the logger, with stack trace.\n     *\n     * @param msg - Data to log.\n     */\n    trace(...msg: any[]): void;\n\n    /**\n     * Output debug message to the logger.\n     *\n     * @param msg - Data to log.\n     */\n    debug(...msg: any[]): void;\n\n    /**\n     * Output info message to the logger.\n     *\n     * @param msg - Data to log.\n     */\n    info(...msg: any[]): void;\n\n    /**\n     * Output warn message to the logger.\n     *\n     * @param msg - Data to log.\n     */\n    warn(...msg: any[]): void;\n\n    /**\n     * Output error message to the logger.\n     *\n     * @param msg - Data to log.\n     */\n    error(...msg: any[]): void;\n}\n\n// This is to demonstrate, that you can use any namespace you want.\n// Namespaces allow you to turn on/off the logging for specific parts of the\n// application.\n// An idea would be to control this via an environment variable (on Node.js).\n// See https://www.npmjs.com/package/debug to see how this could be implemented\n// Part of #332 is introducing a logging library in the first place.\nconst DEFAULT_NAMESPACE = \"matrix\";\n\n// because rageshakes in react-sdk hijack the console log, also at module load time,\n// initializing the logger here races with the initialization of rageshakes.\n// to avoid the issue, we override the methodFactory of loglevel that binds to the\n// console methods at initialization time by a factory that looks up the console methods\n// when logging so we always get the current value of console methods.\nloglevel.methodFactory = function (methodName, logLevel, loggerName) {\n    return function (this: PrefixedLogger, ...args): void {\n        /* eslint-disable @typescript-eslint/no-invalid-this */\n        if (this.prefix) {\n            args.unshift(this.prefix);\n        }\n        /* eslint-enable @typescript-eslint/no-invalid-this */\n        const supportedByConsole =\n            methodName === \"error\" ||\n            methodName === \"warn\" ||\n            methodName === \"trace\" ||\n            methodName === \"info\" ||\n            methodName === \"debug\";\n        /* eslint-disable no-console */\n        if (supportedByConsole) {\n            return console[methodName](...args);\n        } else {\n            return console.log(...args);\n        }\n        /* eslint-enable no-console */\n    };\n};\n\n/**\n * Implementation of {@link Logger} based on `loglevel`.\n */\ninterface PrefixedLogger extends loglevel.Logger, LoggerWithLogMethod {\n    prefix?: string;\n}\n\n/**\n * Internal utility function: gets a {@link Logger} based on `loglevel`.\n *\n * Child loggers produced by {@link Logger.getChild} add the name of the child logger as a prefix on each log line.\n *\n * @param prefix Prefix to add to each logged line. If undefined, no prefix will be added.\n */\nfunction getPrefixedLogger(prefix?: string): LoggerWithLogMethod {\n    const loggerName = DEFAULT_NAMESPACE + (prefix === undefined ? \"\" : `-${prefix}`);\n    const prefixLogger = loglevel.getLogger(loggerName) as PrefixedLogger;\n\n    if (prefixLogger.getChild === undefined) {\n        // This is a new loglevel Logger which has not been turned into a PrefixedLogger yet.\n        prefixLogger.prefix = prefix;\n        prefixLogger.getChild = (childPrefix): Logger => getPrefixedLogger((prefix ?? \"\") + childPrefix);\n        prefixLogger.setLevel(loglevel.levels.DEBUG, false);\n    }\n\n    return prefixLogger;\n}\n\n/**\n * Drop-in replacement for `console` using {@link https://www.npmjs.com/package/loglevel|loglevel}.\n * Can be tailored down to specific use cases if needed.\n */\nexport const logger = getPrefixedLogger();\n\n/**\n * A \"span\" for grouping related log lines together.\n *\n * The current implementation just adds the name at the start of each log line.\n *\n * This offers a lighter-weight alternative to 'child' loggers returned by {@link Logger#getChild}. In particular,\n * it's not possible to apply individual filters to the LogSpan such as setting the verbosity level. On the other hand,\n * no reference to the LogSpan is retained in the logging framework, so it is safe to make lots of them over the course\n * of an application's life and just drop references to them when the job is done.\n */\nexport class LogSpan implements BaseLogger {\n    private readonly name;\n\n    public constructor(\n        private readonly parent: BaseLogger,\n        name: string,\n    ) {\n        this.name = name + \":\";\n    }\n\n    public trace(...msg: any[]): void {\n        this.parent.trace(this.name, ...msg);\n    }\n\n    public debug(...msg: any[]): void {\n        this.parent.debug(this.name, ...msg);\n    }\n\n    public info(...msg: any[]): void {\n        this.parent.info(this.name, ...msg);\n    }\n\n    public warn(...msg: any[]): void {\n        this.parent.warn(this.name, ...msg);\n    }\n\n    public error(...msg: any[]): void {\n        this.parent.error(this.name, ...msg);\n    }\n}\n","/*\nCopyright 2018-2024 New Vector Ltd.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport type { IConfigOptions } from \"../IConfigOptions\";\n\n// Load the config file. First try to load up a domain-specific config of the\n// form \"config.$domain.json\" and if that fails, fall back to config.json.\nexport async function getVectorConfig(relativeLocation = \"\"): Promise<IConfigOptions | undefined> {\n    if (relativeLocation !== \"\" && !relativeLocation.endsWith(\"/\")) relativeLocation += \"/\";\n\n    // Handle trailing dot FQDNs\n    let domain = window.location.hostname.trimEnd();\n    if (domain.endsWith(\".\")) {\n        domain = domain.slice(0, -1);\n    }\n\n    const specificConfigPromise = getConfig(`${relativeLocation}config.${domain}.json`);\n    const generalConfigPromise = getConfig(relativeLocation + \"config.json\");\n\n    try {\n        const configJson = await specificConfigPromise;\n        // 404s succeed with an empty json config, so check that there are keys\n        if (!configJson || Object.keys(configJson).length === 0) {\n            throw new Error(); // throw to enter the catch\n        }\n        return configJson;\n    } catch {\n        return generalConfigPromise;\n    }\n}\n\nasync function getConfig(configJsonFilename: string): Promise<IConfigOptions | undefined> {\n    const url = new URL(configJsonFilename, window.location.href);\n    url.searchParams.set(\"cachebuster\", Date.now().toString());\n    const res = await fetch(url, {\n        cache: \"no-cache\",\n        method: \"GET\",\n    });\n\n    if (res.status === 404 || res.status === 0) {\n        // Lack of a config isn't an error, we should just use the defaults.\n        // Also treat a blank config as no config, assuming the status code is 0, because we don't get 404s from file:\n        // URIs so this is the only way we can not fail if the file doesn't exist when loading from a file:// URI.\n        return {} as IConfigOptions;\n    }\n\n    if (res.ok) {\n        return res.json();\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { getVectorConfig } from \"../getconfig\";\n\nfunction onBackToElementClick(): void {\n    // Cookie should expire in 4 hours\n    document.cookie = \"element_mobile_redirect_to_guide=false;path=/;max-age=14400\";\n    window.location.href = \"../\";\n}\n\n// NEVER pass user-controlled content to this function! Hardcoded strings only please.\nfunction renderConfigError(message: string): void {\n    const contactMsg =\n        \"If this is unexpected, please contact your system administrator \" + \"or technical support representative.\";\n    message = `<h2>Error loading Element</h2><p>${message}</p><p>${contactMsg}</p>`;\n\n    const toHide = document.getElementsByClassName(\"mx_HomePage_container\");\n    const errorContainers = document.getElementsByClassName(\n        \"mx_HomePage_errorContainer\",\n    ) as HTMLCollectionOf<HTMLDivElement>;\n\n    for (const e of toHide) {\n        // We have to clear the content because .style.display='none'; doesn't work\n        // due to an !important in the CSS.\n        e.innerHTML = \"\";\n    }\n    for (const e of errorContainers) {\n        e.style.display = \"block\";\n        e.innerHTML = message;\n    }\n}\n\nasync function initPage(): Promise<void> {\n    document.getElementById(\"back_to_element_button\")!.onclick = onBackToElementClick;\n\n    const config = await getVectorConfig(\"..\");\n\n    // We manually parse the config similar to how validateServerConfig works because\n    // calling that function pulls in roughly 4mb of JS we don't use.\n\n    const wkConfig = config?.[\"default_server_config\"]; // overwritten later under some conditions\n    const serverName = config?.[\"default_server_name\"];\n    const defaultHsUrl = config?.[\"default_hs_url\"];\n    const defaultIsUrl = config?.[\"default_is_url\"];\n\n    const incompatibleOptions = [wkConfig, serverName, defaultHsUrl].filter((i) => !!i);\n    if (defaultHsUrl && (wkConfig || serverName)) {\n        return renderConfigError(\n            \"Invalid configuration: a default_hs_url can't be specified along with default_server_name \" +\n                \"or default_server_config\",\n        );\n    }\n    if (incompatibleOptions.length < 1) {\n        return renderConfigError(\"Invalid configuration: no default server specified.\");\n    }\n\n    let hsUrl: string | undefined;\n    let isUrl: string | undefined;\n\n    if (!serverName && typeof wkConfig?.[\"m.homeserver\"]?.[\"base_url\"] === \"string\") {\n        hsUrl = wkConfig[\"m.homeserver\"][\"base_url\"];\n\n        if (typeof wkConfig[\"m.identity_server\"]?.[\"base_url\"] === \"string\") {\n            isUrl = wkConfig[\"m.identity_server\"][\"base_url\"];\n        }\n    }\n\n    if (serverName) {\n        // We also do our own minimal .well-known validation to avoid pulling in the js-sdk\n        try {\n            const result = await fetch(`https://${serverName}/.well-known/matrix/client`);\n            const wkConfig = await result.json();\n            if (wkConfig?.[\"m.homeserver\"]) {\n                hsUrl = wkConfig[\"m.homeserver\"][\"base_url\"];\n\n                if (wkConfig[\"m.identity_server\"]) {\n                    isUrl = wkConfig[\"m.identity_server\"][\"base_url\"];\n                }\n            }\n        } catch (e) {\n            if (wkConfig?.[\"m.homeserver\"]) {\n                hsUrl = wkConfig[\"m.homeserver\"][\"base_url\"] || undefined;\n\n                if (wkConfig[\"m.identity_server\"]) {\n                    isUrl = wkConfig[\"m.identity_server\"][\"base_url\"] || undefined;\n                }\n            } else {\n                logger.error(e);\n                return renderConfigError(\"Unable to fetch homeserver configuration\");\n            }\n        }\n    }\n\n    if (defaultHsUrl) {\n        hsUrl = defaultHsUrl;\n        isUrl = defaultIsUrl;\n    }\n\n    if (!hsUrl) {\n        return renderConfigError(\"Unable to locate homeserver\");\n    }\n\n    if (hsUrl && !hsUrl.endsWith(\"/\")) hsUrl += \"/\";\n    if (isUrl && !isUrl.endsWith(\"/\")) isUrl += \"/\";\n\n    if (hsUrl !== \"https://matrix.org/\") {\n        let url = \"https://mobile.element.io?hs_url=\" + encodeURIComponent(hsUrl);\n\n        if (isUrl) {\n            document.getElementById(\"custom_is\")!.style.display = \"block\";\n            document.getElementById(\"is_url\")!.style.display = \"block\";\n            document.getElementById(\"is_url\")!.innerText = isUrl;\n            url += \"&is_url=\" + encodeURIComponent(isUrl ?? \"\");\n        }\n\n        (document.getElementById(\"configure_element_button\") as HTMLAnchorElement).href = url;\n        document.getElementById(\"step1_heading\")!.innerHTML = \"1: Install the app\";\n        document.getElementById(\"step2_container\")!.style.display = \"block\";\n        document.getElementById(\"hs_url\")!.innerText = hsUrl;\n    }\n}\n\nvoid initPage();\n"],"names":["noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","_loggersByName","defaultLogger","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","log","trace","realMethod","undefined","replaceLoggingMethods","level","this","getLevel","i","length","methodFactory","name","debug","levels","SILENT","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","Logger","factory","inheritedLevel","defaultLevel","userLevel","self","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","cookieName","location","indexOf","exec","slice","clearPersistedLevel","removeItem","normalizeLevel","input","TypeError","setLevel","persist","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","rebuild","childName","initialLevel","getLogger","logger","_log","noConflict","getLoggers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","oldGetScript","u","oldLoadScript","queryMap","countMap","chunkId","catch","error","retries","realSrc","message","request","Promise","resolve","setTimeout","cacheBust","Date","now","loglevel","logLevel","loggerName","args","prefix","unshift","getPrefixedLogger","prefixLogger","getChild","childPrefix","DEBUG","async","getConfig","configJsonFilename","url","URL","href","searchParams","set","toString","res","fetch","cache","status","ok","json","onBackToElementClick","renderConfigError","toHide","getElementsByClassName","errorContainers","innerHTML","style","display","_wkConfig$mHomeserve","getElementById","onclick","config","relativeLocation","endsWith","domain","hostname","trimEnd","specificConfigPromise","generalConfigPromise","configJson","keys","Error","getVectorConfig","wkConfig","serverName","defaultHsUrl","defaultIsUrl","incompatibleOptions","filter","hsUrl","isUrl","_wkConfig$mIdentity_","result","innerText","initPage"],"sourceRoot":""}